#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall
RESINC = 
LIBDIR = 
LIB = ../../usr/lib/gcc/i486-linux-gnu/4.7.2/libgomp.so
LDFLAGS = 

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g -fopenmp
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = build_debug
DEP_DEBUG = 
OUT_DEBUG = build_debug/cholesky

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = build_release/standard
DEP_RELEASE = 
OUT_RELEASE = build_release/cholesky

INC_SSE = $(INC)
CFLAGS_SSE = $(CFLAGS) -O3 -msse3 -ffast-math -ftree-vectorizer-verbose=1
RESINC_SSE = $(RESINC)
RCFLAGS_SSE = $(RCFLAGS)
LIBDIR_SSE = $(LIBDIR)
LIB_SSE = $(LIB)
LDFLAGS_SSE = $(LDFLAGS)
OBJDIR_SSE = build_release/sse
DEP_SSE = 
OUT_SSE = build_release/cholesky_sse

INC_OPENMP = $(INC)
CFLAGS_OPENMP = $(CFLAGS) -fopenmp
RESINC_OPENMP = $(RESINC)
RCFLAGS_OPENMP = $(RCFLAGS)
LIBDIR_OPENMP = $(LIBDIR)
LIB_OPENMP = $(LIB)
LDFLAGS_OPENMP = $(LDFLAGS)
OBJDIR_OPENMP = build_release/openmp
DEP_OPENMP = 
OUT_OPENMP = build_release/cholesky_openmp

OBJ_DEBUG = $(OBJDIR_DEBUG)/cholesky.o $(OBJDIR_DEBUG)/main.o $(OBJDIR_DEBUG)/spd_matrix.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/cholesky.o $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/spd_matrix.o

OBJ_SSE = $(OBJDIR_SSE)/cholesky.o $(OBJDIR_SSE)/main.o $(OBJDIR_SSE)/spd_matrix.o

OBJ_OPENMP = $(OBJDIR_OPENMP)/cholesky.o $(OBJDIR_OPENMP)/main.o $(OBJDIR_OPENMP)/spd_matrix.o

all: debug release openmp sse

clean: clean_debug clean_release clean_sse clean_openmp

before_debug: 
	test -d build_debug || mkdir -p build_debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/cholesky.o: cholesky.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c cholesky.c -o $(OBJDIR_DEBUG)/cholesky.o

$(OBJDIR_DEBUG)/main.o: main.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.c -o $(OBJDIR_DEBUG)/main.o

$(OBJDIR_DEBUG)/spd_matrix.o: spd_matrix.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c spd_matrix.c -o $(OBJDIR_DEBUG)/spd_matrix.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf build_debug
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d build_release || mkdir -p build_release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/cholesky.o: cholesky.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cholesky.c -o $(OBJDIR_RELEASE)/cholesky.o

$(OBJDIR_RELEASE)/main.o: main.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.c -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/spd_matrix.o: spd_matrix.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c spd_matrix.c -o $(OBJDIR_RELEASE)/spd_matrix.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf build_release
	rm -rf $(OBJDIR_RELEASE)

before_sse: 
	test -d build_release || mkdir -p build_release
	test -d $(OBJDIR_SSE) || mkdir -p $(OBJDIR_SSE)

after_sse: 

sse: before_sse out_sse after_sse

out_sse: before_sse $(OBJ_SSE) $(DEP_SSE)
	$(LD) $(LIBDIR_SSE) -o $(OUT_SSE) $(OBJ_SSE)  $(LDFLAGS_SSE) $(LIB_SSE)

$(OBJDIR_SSE)/cholesky.o: cholesky.c
	$(CC) $(CFLAGS_SSE) $(INC_SSE) -c cholesky.c -o $(OBJDIR_SSE)/cholesky.o

$(OBJDIR_SSE)/main.o: main.c
	$(CC) $(CFLAGS_SSE) $(INC_SSE) -c main.c -o $(OBJDIR_SSE)/main.o

$(OBJDIR_SSE)/spd_matrix.o: spd_matrix.c
	$(CC) $(CFLAGS_SSE) $(INC_SSE) -c spd_matrix.c -o $(OBJDIR_SSE)/spd_matrix.o

clean_sse: 
	rm -f $(OBJ_SSE) $(OUT_SSE)
	rm -rf build_release
	rm -rf $(OBJDIR_SSE)

before_openmp: 
	test -d build_release || mkdir -p build_release
	test -d $(OBJDIR_OPENMP) || mkdir -p $(OBJDIR_OPENMP)

after_openmp: 

openmp: before_openmp out_openmp after_openmp

out_openmp: before_openmp $(OBJ_OPENMP) $(DEP_OPENMP)
	$(LD) $(LIBDIR_OPENMP) -o $(OUT_OPENMP) $(OBJ_OPENMP)  $(LDFLAGS_OPENMP) $(LIB_OPENMP)

$(OBJDIR_OPENMP)/cholesky.o: cholesky.c
	$(CC) $(CFLAGS_OPENMP) $(INC_OPENMP) -c cholesky.c -o $(OBJDIR_OPENMP)/cholesky.o

$(OBJDIR_OPENMP)/main.o: main.c
	$(CC) $(CFLAGS_OPENMP) $(INC_OPENMP) -c main.c -o $(OBJDIR_OPENMP)/main.o

$(OBJDIR_OPENMP)/spd_matrix.o: spd_matrix.c
	$(CC) $(CFLAGS_OPENMP) $(INC_OPENMP) -c spd_matrix.c -o $(OBJDIR_OPENMP)/spd_matrix.o

clean_openmp: 
	rm -f $(OBJ_OPENMP) $(OUT_OPENMP)
	rm -rf build_release
	rm -rf $(OBJDIR_OPENMP)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release before_sse after_sse clean_sse before_openmp after_openmp clean_openmp

